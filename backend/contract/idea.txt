VARIABILI
- [immutabile] prezzo di voto (è il numero di ether che il sistema richiede per votare, viene ridato indietro o quando
si raggiunge una soglia decisa dal sistema di voti - sarebbe un numero di voti per considerare valido il voto di maggioranza -
o dopo una delta - in numero di blocchi - dal momento dell'apertura della votazione, al momento della restituzione viene
ridato lo stake + token di piattaforma, ad esempio si danno 100 token ogni 0.001 ether)
- [immutabile] prezzo di pubblicazione (funziona come sopra solo per pubblicare l'articolo)
- mapping address ethereum -> address nostr
- mapping address ethereum -> reputazione (float)
- struct Articolo:
    - id articolo (int progressivo utile per gli ERC1155)
    - event id nostr dell'articolo (hex che va storato in un byte32 per controllare che non venga creata una nuova istanza di
    articolo solo se non esiste già tra quelli registrati)
    - address ethereum
    - numero di upvote (int)
    - numero di downvote (int)
    - numero di votanti (= upvote + downvote) -> calcolabile
    - soglia_minima_blocco (e.g. current_block_height + 4 giorni)
    - soglia_massima_blocco (e.g. current_block_height + 1 settiman)
- mapping event id di nostr (byte32) -> Articolo
- mapping event id di nostr -> id articolo (forse)
- mapping id articolo -> event id di nostr (forse)


VINCOLI LATO FRONT-END
- Si può istanziare un articolo (salvarlo nel contract -> mi permette di avere finanziamenti) solo se l'event id esiste
su nostr e l'autore dell'event è quello linkato all'account che sta facendo la transazione


VINCOLI LATO BACK-END
- Non istanziare due articoli con event id nostr uguale


MODIFICATORI
- onlyAuthor
Modificatore che controlla che l'utente che sta firmando la transazione abbia anche un account nostr, per fare ciò si
controlla la mapping tra address ethereum e address nostr
- openToVote
Votazione aperta se
numero_voti < soglia_minima_voti and current_block_height < soglia_massima_blocchi 
- closeToVote
Votazione chiusa se 
(numero_voti >= soglia_minima_voti and current_block_height >= soglia_minima_blocchi) or current_block_height >= soglia_massima_blocchi 
  


FUNZIONI
- pubblica_articolo onlyAuthor external payable
Funzione che serve per creare un'istanza articolo nel contract, una volta creata l'istanza è automaticamente pronta a
ricevere votazioni
- vota openToVote external payable
Funzione che serve per votare un articolo
- link_nostr_address
Prova crittografica va crittografata sia con la chiave privata di nostr sia con quella di ethereum (per evitare che qualcuno
legga la mempool e rubi l'account creando una nuova transazione uguale che viene accettata prima)
- claim_stake_reward closeToVote external (id articolo)
La funzione va a buon fine se sei l'autore dell'articolo e la votazione è terminata con approvazione: in questo caso l'autore
riceve una quantità di token proporzionali al valore dello stake + lo stake in ether che torna indietro + la somma degli stake
della minoranza (downvote perché c'è stata approvazione) 
Se la votazione termina con rifiuto e sei l'autore allora si perde tutto e si va a modificare la reputazione
La funzione va a buon fine se sei uno dei reader che fa parte della maggioranza e la votazione è terminata con approvazione:
in questo caso ogni reader ricevere una quantità di token proporzionale al valore dello stake + lo stake in ether che torna
indietro 
La funzione va a buon fine se sei uno dei reader che fa parte della maggioranza e la votazione è terminata con rifiuto:
in questo caso ogni reader ricevere una quantità di token proporzionale al valore dello stake + lo stake in ether che torna
indietro + considerando tutto lo stake dell'autore e della minoranza, una parte proporzionale al peso avuto sul voto
Se sei un reader della minoranza in ogni caso (sia in caso di approvazione sia di rifiuto) si perde tutto e si modifica la
reputazione 


APPUNTI VARI
- i reader fanno stake per votare
- gli autori fanno stake per pubblicare un articolo nell'ecosistema
- il prezzo di voto è di tanto minore di quello di pubblicazione (e.g. 0.001 e 0.01)
- il peso del voto di un reader è calcolato con una formula che tiene in considerazione sia la reputazione sia 
il numero di token di voto per boost (parte o tutti quelli posseduti da spendere dove si vuole, nel momento in cui
questi verranno restituiti saranno nuovamente utilizzati per boostare)
- i reader votano (funzione vota), gli author pubblicano (funzione pubblica_articolo), i reader possono diventare
author (funzione link_nostr_address)
- autore, reader
- approvazione, rifiuto
- maggioranza, minoranza
